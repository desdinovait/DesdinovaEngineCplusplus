#ifndef H_ENUMERATIONS_H
#define H_ENUMERATIONS_H

//***************************
//** ENUMERAZIONI GENERALI **
//***************************

//Tipo di VertexProcessing
typedef enum ENUM_DE_VERTEXPROCESSINGTYPE
{
	DE_VERTEXPROCESSINGTYPE_SW       = D3DCREATE_SOFTWARE_VERTEXPROCESSING,
	DE_VERTEXPROCESSINGTYPE_HW       = D3DCREATE_HARDWARE_VERTEXPROCESSING,
	DE_VERTEXPROCESSINGTYPE_MIXED    = D3DCREATE_MIXED_VERTEXPROCESSING,
	DE_VERTEXPROCESSINGTYPE_PUREHW   = D3DCREATE_HARDWARE_VERTEXPROCESSING | D3DCREATE_PUREDEVICE
}ENUM_DE_VERTEXPROCESSINGTYPE;


//Parametri console
typedef enum ENUM_DE_CONSOLEPARAM 
{ 
	DE_CONSOLEPARAM_NULL = 0,
	DE_CONSOLEPARAM_INT = 1, 
	DE_CONSOLEPARAM_BOOL = 2, 
	DE_CONSOLEPARAM_FLOAT = 3, 
	DE_CONSOLEPARAM_DWORD = 4, 
	DE_CONSOLEPARAM_CORE_PTR = 5,
	DE_CONSOLEPARAM_GFX_PTR = 6
}ENUM_DE_CONSOLEPARAM;


//Tipo di particle system
typedef enum ENUM_DE_PSTYPE 
{
	DE_PSTYPE_POINT = 0, 
	DE_PSTYPE_CUBE = 1,
	DE_PSTYPE_CIRCLE = 2
}ENUM_DE_PSTYPE;

//Tipo di sky
typedef enum ENUM_DE_SKYTYPE 
{
	DE_SKYTYPE_BOX = 0, 
	DE_SKYTYPE_SPHERE = 1,
	DE_SKYTYPE_CYLINDER = 2
}ENUM_DE_SKYTYPE;

//Ritazione BillBoard
typedef enum ENUM_DE_BBROTATION
{
	DE_BBROTATION_NONE = 0,
	DE_BBROTATION_COUNTERCLOCKWISE = 1,
	DE_BBROTATION_CLOCKWISE = 2
}ENUM_DE_BBROTATION;


//These are Flags for LogRenderStates, use Bit operators to get desired effect
//For example, if you want to see Color and Alpha settings...
//Put ENUM_DE_LOGRENDERSTATES_COLOR | ENUM_DE_LOGRENDERSTATES_ALPHA for the Flags, or if you want to see all but POINT
//put ENUM_DE_LOGRENDERSTATES_ALL ^ ENUM_DE_LOGRENDERSTATES_POINT
typedef enum ENUM_DE_LOGRENDERSTATES
{
	DE_LOGRENDERSTATES_MISC			= 1,  //Miscellaneous
	DE_LOGRENDERSTATES_ZCALC		= 2,  //Z and Depth Related
	DE_LOGRENDERSTATES_COLOR		= 4,  //Color Related
	DE_LOGRENDERSTATES_ALPHA		= 8,  //Alpha Related
	DE_LOGRENDERSTATES_LIGHTING		= 16,  //Lighting Related
	DE_LOGRENDERSTATES_FOG			= 32,  //Fog Related
	DE_LOGRENDERSTATES_TEXTURE		= 64,  //Texture Related
	DE_LOGRENDERSTATES_TEXTUREWRAP	= 128,  //Texture Wrapping Related
	DE_LOGRENDERSTATES_STENCIL		= 256,  //Stenceil Related
	DE_LOGRENDERSTATES_POINT		= 512,  //Point Related
	DE_LOGRENDERSTATES_CLIP			= 1024,  //Clipping Related
	DE_LOGRENDERSTATES_TESSELLATION	= 2048,  //Tesselation Related
	DE_LOGRENDERSTATES_VERTEX		= 4096,  //Vertex Related
	DE_LOGRENDERSTATES_ALL			= 0xFFFFFFFF
}ENUM_DE_LOGRENDERSTATES;


//Pulsanti mouse
typedef enum ENUM_DE_MOUSEBUTTON
{
	DE_MOUSEBUTTON_LEFTBUTTON		= 0,
	DE_MOUSEBUTTON_RIGHTBUTTON		= 1,
	DE_MOUSEBUTTON_MIDDLEBUTTON		= 2,
	DE_MOUSEBUTTON_4BUTTON			= 3,
	DE_MOUSEBUTTON_5BUTTON			= 4,
	DE_MOUSEBUTTON_6BUTTON			= 5,
	DE_MOUSEBUTTON_7BUTTON			= 6,
	DE_MOUSEBUTTON_8BUTTON			= 7
}ENUM_DE_MOUSEBUTTON;


//Pulsanti Joystick/Joypad
typedef enum ENUM_DE_JOYBUTTON
{
	DE_JOYBUTTON_0BUTTON			= 0,
	DE_JOYBUTTON_1BUTTON			= 1,
	DE_JOYBUTTON_2BUTTON			= 2,
	DE_JOYBUTTON_3BUTTON			= 3,
	DE_JOYBUTTON_4BUTTON			= 4,
	DE_JOYBUTTON_5BUTTON			= 5,
	DE_JOYBUTTON_6BUTTON			= 6,
	DE_JOYBUTTON_7BUTTON			= 7,
	DE_JOYBUTTON_8BUTTON			= 8,	
	DE_JOYBUTTON_LEFT				= 9,
	DE_JOYBUTTON_RIGHT				= 10,
	DE_JOYBUTTON_UP					= 11,
	DE_JOYBUTTON_DOWN				= 12,
}ENUM_DE_JOYBUTTON;


//Pulsanti Joystick/Joypad
typedef enum ENUM_DE_LIGHTTYPE
{
	DE_LIGHTTYPE_PERPIXELDIRECTIONAL	= 0,
	DE_LIGHTTYPE_PERPIXELPOINT			= 1,
}ENUM_DE_LIGHTTYPE;

#endif